[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "As Singapore’s population ages rapidly, understanding demographic structures and spatial distributions is more critical than ever. The objective for this visualize analysis is to uncover meaningful patterns in the aging demographic using three visualizations: a population pyramid to show the overall age-gender distribution, a bar chart to compare elderly proportions by planning area, and a heatmap to explore age group concentrations across regions. These visualizations aim to support public awareness and inform urban planners and policymakers on how the aging population is evolving geographically and demographically.\n\n\n\n\n\n\npacman::p_load(tidyverse,dplyr, janitor)\n\n\n\n\n\n\nThe dataset used in this analysis is titled “Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024”, published by the Department of Statistics (DOS), Singapore. It provides demographic data of resident populations segmented by planning area, subzone, single year of age (from 0 to “90_and_over”), population number and sex (male and female), as of June 2024.\n\n\n\n\n\n\n\n\n\n\n\nVariable\nDefinition\nData Type\n\n\n\n\nPA\nPA means Planning Area.\nText\n\n\nSZ\nSZ means subzone. In each planning area, there are several subzones.\nText\n\n\nAge\nIn the dataset, age is the single year of age (i.e. 0, 1, 2, 3…).\nInteger\n\n\nSex\nSex includes male and female.\nText\n\n\nPop\nPop means the number of population.\nInteger\n\n\nTime\nAll the time is 2024.\nInteger\n\n\n\n\n\n\n\n\nsgresidents_2024 &lt;- read_csv(\"respopagesex2024/respopagesex2024.csv\")\nglimpse(sgresidents_2024)\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\n\n\n\n\n\nThe column names in the original dataset were cleaned and standardized by using the clean_names() function from the janitor package. This step converts all column names to lowercase and replaces spaces or special characters with underscores, ensuring they are consistent and easier to reference in subsequent code.\n\nsgresidents_2024 &lt;- sgresidents_2024 %&gt;% clean_names()\n\n\n\n\nThis step filters the dataset to focus on the aging population, defined as residents aged 65 and above. Since the age column includes the value “90_and_Over” as a character string, it was first replaced with “90” to allow for numeric conversion. The age column was then converted to integer format. We filtered the dataset to retain only records where age is 65 or higher and excluded any rows with missing planning area (pa) or population (pop) values.\n\nelderly &lt;- sgresidents_2024 %&gt;%\n  \n  mutate(age = if_else(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age)) %&gt;%\n  \n  filter(age &gt;= 65, !is.na(pa), !is.na(pop))\n\n\n\n\n\n\n\n\nThe population pyramid of Singapore in 2024 illustrates a distinctly aging demographic. The population is mainly concentrated between 40 and 60 years old, which means Singapore is stepping into an aging society. The tapering base reflects a low birth rate in recent decades, with significantly fewer residents under age 20.\nThe gender split is also apparent. Female residents increasingly outnumber males in the oldest age, which can support the statement of longer female life expectancy.\nThis aging structure suggests future challenges, including rising healthcare needs, a shrinking workforce, etc. The visulization underscores the urgency for social policies to support an elderly-centric population society.\n\npyramid_data &lt;- sgresidents_2024 %&gt;%\n\n  mutate(age = if_else(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age)) %&gt;%\n  \n  filter(age &lt;= 100) %&gt;%\n  \n  group_by(age, sex) %&gt;%\n  \n  summarise(population = sum(pop), .groups = \"drop\") %&gt;%\n  \n  mutate(population = if_else(sex == \"Females\", -population, population))\n\n\nggplot(pyramid_data, aes(x = age, y = population, fill = sex)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  labs(title = \"Population Pyramid of Singapore 2024\",\n       x = \"Age\", y = \"Population\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThe bar chart shows the percentage of elderly residents (aged 65 and above) in each planning area of Singapore as of June 2024.\nFrom the chart, it is clear that some areas with long-established communities have a higher percentage of aging residents than others. For example, areas like Outram, Ang Mo Kio, and Bukit Merah have the highest proportions of elderly people, with more than 24% of their residents aged 65 or older.\nOn the other hand, newer or developing areas like have much lower proportions of elderly, likely because younger families are moving in and the towns are still growing.\nThis pattern shows that the aging population distribution is not evenly spread across the Singapore. These differences are important for planning healthcare, transport, and social services. For instance, older areas may need more elder care facilities, while younger areas may focus more on schools and childcare.\n\ntotal_area &lt;- sgresidents_2024 %&gt;%\n  group_by(pa) %&gt;%\n  summarise(total = sum(pop), .groups = \"drop\")\n\nelderly_area &lt;- elderly %&gt;%\n  group_by(pa) %&gt;%\n  summarise(elderly = sum(pop), .groups = \"drop\")\n\naging_ratio &lt;- left_join(total_area, elderly_area, by = \"pa\") %&gt;%\n  filter(total &gt; 0) %&gt;%\n  mutate(elderly = replace_na(elderly, 0),\n         aging_percentage = elderly / total)\n\n\nggplot(aging_ratio, aes(x = reorder(pa, aging_percentage), \n                        y = aging_percentage)) +\n  geom_col(fill = \"lightpink\") +\n  coord_flip() +\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Proportion of Elderly (65+) by Planning Area\",\n    x = \"Planning Area\",\n    y = \"Elderly Proportion\"\n  ) +\n  theme_minimal(base_size = 12) +\n    theme(axis.text.y = element_text(size = 13),\n          axis.text.x = element_text(size = 13),\n    plot.title = element_text(size = 25, face = \"bold\",\n                              hjust =0.5),\n    plot.margin = margin(10, 20, 10, 10))\n\n\n\n\n\n\n\n\n\n\n\nSince in the 3.2 section, we found that the aging distribution is not evenly spread. Therefore, in this section, the heatmap shows how the elderly population is distributed across different planning areas and age groups in Singapore.\nEach cell’s color represents the number of elderly people. Lighter cells mean more people in that age group and area. From the chart, we can see that areas like Bedok, Tampines, Hougang have the largest elderly populations, especially in the 65–74 age group.\nThis heatmap helps us understand not just where elderly people live, but also their age range. For instance, Bedok has the highest number of population which focus on 65-74 age group, which mean that it would have highest number of 85+ age group in 10 - 20 years. This forecasting can help the government prepare to support these areas.\n\nheatmap_grouped &lt;- elderly %&gt;%\n  \n  mutate(age = ifelse(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age),\n         age_group = case_when(\n           age &gt;= 65 & age &lt;= 74 ~ \"65–74\",\n           age &gt;= 75 & age &lt;= 84 ~ \"75–84\",\n           age &gt;= 85 ~ \"85+\",\n           TRUE ~ NA_character_)) %&gt;%\n  \n  filter(!is.na(age_group)) %&gt;%\n  group_by(pa, age_group) %&gt;%\n  summarise(total_pop = sum(pop), .groups = \"drop\")\n\n\nggplot(heatmap_grouped, aes(x = age_group, y = reorder(pa, -total_pop), fill = total_pop)) +\n  geom_tile(color = \"white\") +\n  scale_fill_viridis_c(option = \"C\", name = \"Population\") +\n  labs(\n    title = \"Heatmap of Elderly Population by Age Group and Planning Area\",\n    x = \"Age Group\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal(base_size = 13) +\n    theme(axis.text.y = element_text(size = 13),\n          axis.text.x = element_text(size = 15),\n    plot.title = element_text(size = 25, face = \"bold\",\n                              hjust =0.5),\n    plot.margin = margin(10, 20, 10, 10))\n\n\n\n\n\n\n\n\n\n\n\n\nThree visulization charts provide a clear picture of Singapore’s aging population and how it is distributed across planning areas.\nThe population pyramid confirms that Singapore is a rapidly aging society, with a shrinking youth base and a growing older adult population. The bar chart highlights the areas with higher elders percentage. The heatmap adds another layer of insight by showing which planning areas have the largest numbers of elderly in each age group. These findings underscore the importance of elder care infrastructures planning, and community services tailored to local aging trends across Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#overview",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "As Singapore’s population ages rapidly, understanding demographic structures and spatial distributions is more critical than ever. The objective for this visualize analysis is to uncover meaningful patterns in the aging demographic using three visualizations: a population pyramid to show the overall age-gender distribution, a bar chart to compare elderly proportions by planning area, and a heatmap to explore age group concentrations across regions. These visualizations aim to support public awareness and inform urban planners and policymakers on how the aging population is evolving geographically and demographically."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#data-preparation",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "pacman::p_load(tidyverse,dplyr, janitor)\n\n\n\n\n\n\nThe dataset used in this analysis is titled “Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024”, published by the Department of Statistics (DOS), Singapore. It provides demographic data of resident populations segmented by planning area, subzone, single year of age (from 0 to “90_and_over”), population number and sex (male and female), as of June 2024.\n\n\n\n\n\n\n\n\n\n\n\nVariable\nDefinition\nData Type\n\n\n\n\nPA\nPA means Planning Area.\nText\n\n\nSZ\nSZ means subzone. In each planning area, there are several subzones.\nText\n\n\nAge\nIn the dataset, age is the single year of age (i.e. 0, 1, 2, 3…).\nInteger\n\n\nSex\nSex includes male and female.\nText\n\n\nPop\nPop means the number of population.\nInteger\n\n\nTime\nAll the time is 2024.\nInteger\n\n\n\n\n\n\n\n\nsgresidents_2024 &lt;- read_csv(\"respopagesex2024/respopagesex2024.csv\")\nglimpse(sgresidents_2024)\n\nRows: 60,424\nColumns: 6\n$ PA   &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  &lt;chr&gt; \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  &lt;chr&gt; \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  &lt;dbl&gt; 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n\n\n\n\n\n\n\nThe column names in the original dataset were cleaned and standardized by using the clean_names() function from the janitor package. This step converts all column names to lowercase and replaces spaces or special characters with underscores, ensuring they are consistent and easier to reference in subsequent code.\n\nsgresidents_2024 &lt;- sgresidents_2024 %&gt;% clean_names()\n\n\n\n\nThis step filters the dataset to focus on the aging population, defined as residents aged 65 and above. Since the age column includes the value “90_and_Over” as a character string, it was first replaced with “90” to allow for numeric conversion. The age column was then converted to integer format. We filtered the dataset to retain only records where age is 65 or higher and excluded any rows with missing planning area (pa) or population (pop) values.\n\nelderly &lt;- sgresidents_2024 %&gt;%\n  \n  mutate(age = if_else(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age)) %&gt;%\n  \n  filter(age &gt;= 65, !is.na(pa), !is.na(pop))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualization-charts",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#visualization-charts",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "The population pyramid of Singapore in 2024 illustrates a distinctly aging demographic. The population is mainly concentrated between 40 and 60 years old, which means Singapore is stepping into an aging society. The tapering base reflects a low birth rate in recent decades, with significantly fewer residents under age 20.\nThe gender split is also apparent. Female residents increasingly outnumber males in the oldest age, which can support the statement of longer female life expectancy.\nThis aging structure suggests future challenges, including rising healthcare needs, a shrinking workforce, etc. The visulization underscores the urgency for social policies to support an elderly-centric population society.\n\npyramid_data &lt;- sgresidents_2024 %&gt;%\n\n  mutate(age = if_else(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age)) %&gt;%\n  \n  filter(age &lt;= 100) %&gt;%\n  \n  group_by(age, sex) %&gt;%\n  \n  summarise(population = sum(pop), .groups = \"drop\") %&gt;%\n  \n  mutate(population = if_else(sex == \"Females\", -population, population))\n\n\nggplot(pyramid_data, aes(x = age, y = population, fill = sex)) +\n  geom_col() +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  labs(title = \"Population Pyramid of Singapore 2024\",\n       x = \"Age\", y = \"Population\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nThe bar chart shows the percentage of elderly residents (aged 65 and above) in each planning area of Singapore as of June 2024.\nFrom the chart, it is clear that some areas with long-established communities have a higher percentage of aging residents than others. For example, areas like Outram, Ang Mo Kio, and Bukit Merah have the highest proportions of elderly people, with more than 24% of their residents aged 65 or older.\nOn the other hand, newer or developing areas like have much lower proportions of elderly, likely because younger families are moving in and the towns are still growing.\nThis pattern shows that the aging population distribution is not evenly spread across the Singapore. These differences are important for planning healthcare, transport, and social services. For instance, older areas may need more elder care facilities, while younger areas may focus more on schools and childcare.\n\ntotal_area &lt;- sgresidents_2024 %&gt;%\n  group_by(pa) %&gt;%\n  summarise(total = sum(pop), .groups = \"drop\")\n\nelderly_area &lt;- elderly %&gt;%\n  group_by(pa) %&gt;%\n  summarise(elderly = sum(pop), .groups = \"drop\")\n\naging_ratio &lt;- left_join(total_area, elderly_area, by = \"pa\") %&gt;%\n  filter(total &gt; 0) %&gt;%\n  mutate(elderly = replace_na(elderly, 0),\n         aging_percentage = elderly / total)\n\n\nggplot(aging_ratio, aes(x = reorder(pa, aging_percentage), \n                        y = aging_percentage)) +\n  geom_col(fill = \"lightpink\") +\n  coord_flip() +\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +\n  labs(\n    title = \"Proportion of Elderly (65+) by Planning Area\",\n    x = \"Planning Area\",\n    y = \"Elderly Proportion\"\n  ) +\n  theme_minimal(base_size = 12) +\n    theme(axis.text.y = element_text(size = 13),\n          axis.text.x = element_text(size = 13),\n    plot.title = element_text(size = 25, face = \"bold\",\n                              hjust =0.5),\n    plot.margin = margin(10, 20, 10, 10))\n\n\n\n\n\n\n\n\n\n\n\nSince in the 3.2 section, we found that the aging distribution is not evenly spread. Therefore, in this section, the heatmap shows how the elderly population is distributed across different planning areas and age groups in Singapore.\nEach cell’s color represents the number of elderly people. Lighter cells mean more people in that age group and area. From the chart, we can see that areas like Bedok, Tampines, Hougang have the largest elderly populations, especially in the 65–74 age group.\nThis heatmap helps us understand not just where elderly people live, but also their age range. For instance, Bedok has the highest number of population which focus on 65-74 age group, which mean that it would have highest number of 85+ age group in 10 - 20 years. This forecasting can help the government prepare to support these areas.\n\nheatmap_grouped &lt;- elderly %&gt;%\n  \n  mutate(age = ifelse(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age),\n         age_group = case_when(\n           age &gt;= 65 & age &lt;= 74 ~ \"65–74\",\n           age &gt;= 75 & age &lt;= 84 ~ \"75–84\",\n           age &gt;= 85 ~ \"85+\",\n           TRUE ~ NA_character_)) %&gt;%\n  \n  filter(!is.na(age_group)) %&gt;%\n  group_by(pa, age_group) %&gt;%\n  summarise(total_pop = sum(pop), .groups = \"drop\")\n\n\nggplot(heatmap_grouped, aes(x = age_group, y = reorder(pa, -total_pop), fill = total_pop)) +\n  geom_tile(color = \"white\") +\n  scale_fill_viridis_c(option = \"C\", name = \"Population\") +\n  labs(\n    title = \"Heatmap of Elderly Population by Age Group and Planning Area\",\n    x = \"Age Group\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal(base_size = 13) +\n    theme(axis.text.y = element_text(size = 13),\n          axis.text.x = element_text(size = 15),\n    plot.title = element_text(size = 25, face = \"bold\",\n                              hjust =0.5),\n    plot.margin = margin(10, 20, 10, 10))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#conclusion",
    "title": "Take-home_Ex01",
    "section": "",
    "text": "Three visulization charts provide a clear picture of Singapore’s aging population and how it is distributed across planning areas.\nThe population pyramid confirms that Singapore is a rapidly aging society, with a shrinking youth base and a growing older adult population. The bar chart highlights the areas with higher elders percentage. The heatmap adds another layer of insight by showing which planning areas have the largest numbers of elderly in each age group. These findings underscore the importance of elder care infrastructures planning, and community services tailored to local aging trends across Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#original-visualization",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#original-visualization",
    "title": "Take-home_Ex01",
    "section": "5 Original Visualization",
    "text": "5 Original Visualization\n\n\n\n\n\n\nJustification\n\n\n\nI chose to analyze this population pyramid because it is very similar to the first one I built for my own visualization. As I worked on mine, I was aware of the areas that could be enhanced to make the chart more understandable and informative. I discovered a few problems with my peer’s version, including some unclear labeling and potentially incorrect values, particularly with the method that the population was calculated or presented. This allowed me to think about both her and my plot and then try to make it better in my modified version.\n\n\nMy Peer’s work\n\npyramid_data &lt;- sgresidents_2024 %&gt;%\n  group_by(age, sex) %&gt;%\n  summarise(pop = sum(pop), .groups = \"drop\") %&gt;%\n  mutate(pop = ifelse(sex == \"Males\", -pop, pop))\n\nggplot(pyramid_data, aes(x = age, y = pop, fill = sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  scale_fill_manual(values = c(\"Males\" = \"#102E50\", \"Females\" = \"#F7CFD8\")) + \n  scale_x_discrete(breaks = seq(0, 100, by = 10)) +\n  labs(title = \"Singapore Age Pyramid (2024)\",\n       x = \"Age\", y = \"Population\") +\n  theme_classic()\n\n\n\n\n\n\n\n\n\n5.1 Good Points of the Visualization\n\n\n\n\n\n\nGood Points of the Visualization\n\n\n\n\nEffective Use of Symmetry for Comparison\n\nThe mirrored layout allows direct visual comparison between males and females across age groups, taking advantage of pre-attentive processing—our brains can instantly detect asymmetries or trends.\n\nClear Visual Contrast Between Genders\n\nThe use of distinct colors (#102E50 for Males and #F7CFD8 for Females) provides a strong contrast, making it easy to differentiate between the two groups at a glance.\n\nClean Axes and Labeling\n\nLabels are direct and aligned with the variable meanings (Age, Population) and axes are flipped for better age group readability—respecting orientation best practices for such charts.\n\n\n\n\n\n\n5.2 Areas for Further Improvement\n\n\n\n\n\n\nAreas for Further Improvement\n\n\n\n\nUnbalanced X-Axis for Population\n\nIssue: The x-axis (population) scale is not symmetric, making male and female distributions visually unequal even if numbers are comparable.\nImprovement: Use scale_y_continuous(limits = c(-max, max)) to ensure balanced comparison between both sides.\n\nLack of Data Labels\n\nIssue: The bars show magnitude but lack percentage or population labels, which limits interpretability, especially for identifying the proportion of each group.\nImprovement: Add geom_text() to display percentages (or absolute values), enhancing clarity and precision.\n\nLimited Context or Insights\n\nIssue: The chart has no subtitle and annotations to help viewers interpret demographic trends (e.g., aging population bulge).\nImprovement: Add a subtitle, annotations texts to guide interpretation and highlight key demographic observations.\n\n\n\n\n\n\n5.3 Makeover Version of the Data Visualization\n\npyramid_data &lt;- sgresidents_2024 %&gt;%\n  mutate(age = if_else(age == \"90_and_Over\", \"90\", age),\n         age = as.integer(age)) %&gt;%\n  filter(age &lt;= 100) %&gt;%\n  group_by(age, sex) %&gt;%\n  summarise(population = sum(pop), .groups = \"drop\") %&gt;%\n  mutate(population = if_else(sex == \"Females\", -population, population),\n         age = factor(age, levels = sort(unique(age))))  # Fix for axis labels\n\n\nage_totals &lt;- pyramid_data %&gt;%\n  group_by(age) %&gt;%\n  summarise(age_total = sum(abs(population)))\n\n\npyramid_data &lt;- pyramid_data %&gt;%\n  left_join(age_totals, by = \"age\") %&gt;%\n  mutate(percent = abs(population) / age_total * 100)\n\n\nggplot(pyramid_data, aes(x = age, y = population, fill = sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip(clip = \"off\") +\n  scale_y_continuous(\n    labels = abs,\n    limits = c(-40000, 40000),\n    expand = c(0, 0)\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"#446AAB\", \"Females\" = \"#D97A95\")) + \n  geom_text(aes(label = paste0(round(percent, 1), \"%\")),\n            position = \"identity\",\n            hjust = ifelse(pyramid_data$sex == \"Males\", 1.05, -0.05),\n            size = 2.8,\n            color = \"white\") +\n  scale_x_discrete(breaks = seq(0, 100, by = 10)) +\n  annotate(\"text\", x = 95, y = -36000, label = \"Females\", color = \"#D97A95\", \n           size = 5, hjust = 0) +\n  annotate(\"text\", x = 95, y = 36000, label = \"Males\", color = \"#446AAB\", \n           size = 5, hjust = 1) +\n  labs(\n    title = \"Singapore Age Pyramid (2024)\",\n    subtitle = \"Females on the left (pink), Males on the right (blue),\",\n    x = \"Age\",\n    y = \"Population\"\n  ) +\n  theme_classic() +\n  theme(legend.position = \"top\",\n        axis.title.x = element_text(size = 25),\n        axis.title.y = element_text(size = 25),\n        axis.text.x = element_text(size = 15),\n        axis.text.y = element_text(size = 15),\n        plot.title = element_text(size = 30, face = \"bold\",hjust = 0.5),\n        plot.subtitle = element_text(size = 15, hjust = 0.5),\n        plot.margin = margin(10, 40, 10, 40),\n        legend.text = element_text(size = 15),\n        legend.title = element_text(size = 25))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImprovements (makeover version vs original version)\n\n\n\n\nReversed Axis Annotation and Added Subtitle\n\nI swapped the annotation positions so that Females are labeled on the left (negative side) and Males on the right (positive side), matching the plot structure. Also by adding the subtitle under the plot title stating the positions and color of the male and female, which clears up confusion for viewers unfamiliar with the convention, making the chart easier to interpret.\n\nIncreased Plot Range and Margin for Visibility\n\nI expanded the scale_y_continuous() limits and margins, and used clip = \"off\" to ensure annotations were not cut off. This ensure that all labels and annotations are fully visible within the chart area.\n\nAdded Percent Labels Within Bars\n\nI used geom_text() to include the percentage distribution for each age group. Making the chart more informative at a glance, showing both proportion and distribution without requiring estimation.\n\n\n\n\n\n\n\n\n\n\nAdvantages (i.e. why do these improvements)\n\n\n\n\nEasier Interpretation for All Audiences\n\nAdding clear annotations (“Males” and “Females”) and a helpful subtitle guides viewers—especially those unfamiliar with population pyramids—to understand which side represents which gender, reducing misinterpretation.\n\nEnhanced Data Readability\n\nIncluding percentage labels inside the bars helps readers instantly grasp the proportion of each gender in each age group, without needing to estimate from the axis.\n\nImproved Visual Structure\n\nA more polished and comprehensive design is produced by adjusting the annotations and expanding the plot margins to ensure that all components—labels and annotations—are completely visible and not covered."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA-Huang Zihan",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Application. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel,\n               ggthemes,\n               hrbrthemes,\n               patchwork,\n               tidyverse)\n\n\n\n\n\nexam_data&lt;-read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_label(aes(label=ID),\n             hjust=.5,\n             vjust=-.5)+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_label_repel(aes(label = ID),\n                   fontface = \"bold\")+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_text_repel(aes(label = ID),\n                   fontface = \"bold\",\n                  size = 3.5,\n                  color = \"blue\")+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 302 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"white\",\n                 fill = \"grey\")+\n  ggtitle(\"Distribution of Maths scores\")+\n  theme_wsj()+\n  theme(plot.title = element_text(size = 20))\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"white\",\n                 fill = \"grey\")+\n  ggtitle(\"Distribution of Maths scores\")+\n  theme_ipsum(axis_title_size = 15,\n              base_size = 15,\n              grid = \"N\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1&lt;-ggplot(data = exam_data,\n           aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\")+\n  coord_cartesian(xlim=c(0,100))+\n  ggtitle(\"Distribution of Maths Scores\")\np1\n\n\n\n\n\n\n\n\n\np2&lt;-ggplot(data = exam_data,\n           aes(x=ENGLISH))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\")+\n  coord_cartesian(xlim=c(0,100))+\n  ggtitle(\"Distribution of English Scores\")\np2\n\n\n\n\n\n\n\n\n\np3&lt;-ggplot(data = exam_data,\n           aes(x=MATHS,\n               y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method=lm,\n              size=0.5)+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\np1+p2\n\n\n\n\n\n\n\n\n\n\n\n\n“/” operator to stack two ggplot2 graphs\n“|” operator to place the plots beside each other\n“()” operator the define the sequence of the plotting\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()+theme(plot.title = element_text(size = 6))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#data-preparation",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "pacman::p_load(ggrepel,\n               ggthemes,\n               hrbrthemes,\n               patchwork,\n               tidyverse)\n\n\n\n\n\nexam_data&lt;-read_csv(\"Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-to-repel-overlapping-text",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggrepel-to-repel-overlapping-text",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "ggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_label(aes(label=ID),\n             hjust=.5,\n             vjust=-.5)+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_label_repel(aes(label = ID),\n                   fontface = \"bold\")+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x=MATHS,\n           y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method = lm,\n              linewidth=0.5)+\n  geom_text_repel(aes(label = ID),\n                   fontface = \"bold\",\n                  size = 3.5,\n                  color = \"blue\")+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 302 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#ggthemes",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"white\",\n                 fill = \"grey\")+\n  ggtitle(\"Distribution of Maths scores\")+\n  theme_wsj()+\n  theme(plot.title = element_text(size = 20))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#hrbrthemes",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "ggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"white\",\n                 fill = \"grey\")+\n  ggtitle(\"Distribution of Maths scores\")+\n  theme_ipsum(axis_title_size = 15,\n              base_size = 15,\n              grid = \"N\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pathwork-to-combine-single-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#pathwork-to-combine-single-graphs",
    "title": "Hands-on_Ex02",
    "section": "",
    "text": "p1&lt;-ggplot(data = exam_data,\n           aes(x=MATHS))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\")+\n  coord_cartesian(xlim=c(0,100))+\n  ggtitle(\"Distribution of Maths Scores\")\np1\n\n\n\n\n\n\n\n\n\np2&lt;-ggplot(data = exam_data,\n           aes(x=ENGLISH))+\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\")+\n  coord_cartesian(xlim=c(0,100))+\n  ggtitle(\"Distribution of English Scores\")\np2\n\n\n\n\n\n\n\n\n\np3&lt;-ggplot(data = exam_data,\n           aes(x=MATHS,\n               y=ENGLISH))+\n  geom_point()+\n  geom_smooth(method=lm,\n              size=0.5)+\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))+\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\np3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\np1+p2\n\n\n\n\n\n\n\n\n\n\n\n\n“/” operator to stack two ggplot2 graphs\n“|” operator to place the plots beside each other\n“()” operator the define the sequence of the plotting\n\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_wsj()+theme(plot.title = element_text(size = 6))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#loading-packages",
    "title": "Hands-on Exercise 3-1",
    "section": "1. Loading packages",
    "text": "1. Loading packages\nPackages Introduction\n\nggiraph: to make ggplot graphics interactive\nplotly: to plot interactive statistical graphs\nDT: to provide an R interface to the JavaScript library DataTables to create interactive table on html page\ntidyverse: a family of modern R packages specially designed to support data science, analysis and communication task\npatchwork: to combine multiple ggplot2 graphs into one figure\n\n\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#importing-data",
    "title": "Hands-on Exercise 3-1",
    "section": "2. Importing data",
    "text": "2. Importing data\n\nexam_data&lt;-read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#tooltip",
    "title": "Hands-on Exercise 3-1",
    "section": "1. tooltip",
    "text": "1. tooltip\nTooltip’s function is to display the information when the mouse is over elements.\n\n(1) Displaying one information on tooltip\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, \n                           binwidth = 1, method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n(2) Displaying multiple information on tooltip\n\nexam_data$tooltip &lt;- paste0(\"Name = \", exam_data$ID,\"\\n CLASS = \", exam_data$CLASS)\n# create a new field called tooltip, including ID and CLASS.\n# paste0(): to concatenate strings\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = exam_data$tooltip),\n                           stackgroups = TRUE, binwidth = 1, \n                           method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n(3) Customising Tooltip style\n\ntooltip_css &lt;- \"background-color:white; font-style:bold; color:black;\" \n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618,\n  options = list(opts_tooltip(css = tooltip_css))) \n\n\n\n\n\n\n\n(4) Displaying statistics on tooltip\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE)) +\n  stat_summary(aes(y = MATHS, tooltip = after_stat(tooltip(y, ymax))),  \n    fun.data = \"mean_se\", geom = GeomInteractiveCol,fill = \"light pink\") +\n  stat_summary(aes(y = MATHS),fun.data = mean_se,geom = \"errorbar\", width = 0.2, size = 0.2)\n\ngirafe(ggobj = gg_point, width_svg = 8, height_svg = 8*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#data_id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#data_id",
    "title": "Hands-on Exercise 3-1",
    "section": "2. Data_id",
    "text": "2. Data_id\nData_id is used to assign a unique identifier to each graphic element. In this case, elements associated with a data_id will be highlighted upon mouse over.\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n(1)Styling hover effect\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p,width_svg = 6,height_svg = 6*0.618,\n  options = list(opts_hover(css = \"fill: #202020;\"), opts_hover_inv(css = \"opacity:0.2;\")))                                        \n\n\n\n\n\n\n\n(2) Combing tooltip and hover effect\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(tooltip=CLASS,data_id = CLASS), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +               \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p,width_svg = 6,height_svg = 6*0.618,\n  options = list(opts_hover(css = \"fill: #202020;\"), opts_hover_inv(css = \"opacity:0.2;\")))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#onclick",
    "title": "Hands-on Exercise 3-1",
    "section": "3. Onclick",
    "text": "3. Onclick\nOnclick is to define a JavaScript action that happens when the user clicks on a visual element.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(onclick = onclick), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +\n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(ggobj = p, width_svg = 6, height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinate-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinate-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3-1",
    "section": "4. Coordinate multiple views with ggiraph",
    "text": "4. Coordinate multiple views with ggiraph\nTo achieve this, appropriate interactive functions of ggiraph will be used to create the multiple views, and patchwork function will be used inside girafe function to coordinate multiple views.\n\np1 &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(aes(data_id = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL, breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, aes(x = ENGLISH)) +\n  geom_dotplot_interactive(aes(data_id = ID), stackgroups = TRUE, binwidth = 1, method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL, breaks = NULL)\n\ngirafe(code = print(p1 + p2), width_svg = 6, height_svg = 3, \n       options = list(opts_hover(css = \"fill: #202020;\"), \n              opts_hover_inv(css = \"opacity:0.2;\")))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#plot_ly-method",
    "title": "Hands-on Exercise 3-1",
    "section": "1. plot_ly() method",
    "text": "1. plot_ly() method\n\nplot_ly(data = exam_data, x = ~MATHS, y = ~ENGLISH, color = ~RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#ggplotly-method",
    "title": "Hands-on Exercise 3-1",
    "section": "2. ggplotly() method",
    "text": "2. ggplotly() method\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS, y = ENGLISH, colour = RACE)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nggplotly(p)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinate-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#coordinate-multiple-views-with-plotly",
    "title": "Hands-on Exercise 3-1",
    "section": "3. Coordinate multiple views with plotly",
    "text": "3. Coordinate multiple views with plotly\nDifferent from coordinating multiple views with ggiraph by using patchwork, Here are three steps to coordinate multiple views with plotly.\n\nhighlight_key() of plotly is used as shared data\n2 scatterplots will be created by using ggplot2 functions\nsubplot() of plotly is used to place them next to each other side-by-side\n\n\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data=d,aes(x = MATHS, y = ENGLISH, colour = RACE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, aes(x = MATHS, y = SCIENCE, colour = RACE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\nsubplot(ggplotly(p1), ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#dt-package",
    "title": "Hands-on Exercise 3-1",
    "section": "1. DT package",
    "text": "1. DT package\n\nDT::datatable(exam_data, class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#linked-brushing",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_1.html#linked-brushing",
    "title": "Hands-on Exercise 3-1",
    "section": "2. Linked brushing",
    "text": "2. Linked brushing\n\nLinked brushing is an interactive feature where selecting data points in one widget highlights the same points in another widget.\nhighlight() is a function of plotly package, to set a variety of options for brushing (i.e., highlighting) multiple plots.\nbscols() is a function of crosstalk package, to make it easy to put HTML elements side by side.\n\n\nd &lt;- highlight_key(exam_data) \n\np &lt;- ggplot(d, aes(ENGLISH, MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")  \n\ncrosstalk::bscols(gg, DT::datatable(d), widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "ggstatsplot is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"Exam_data.csv\")\n\n\n\n\n\nset.seed(1234)\n\ngghistostats(data = exam, x = ENGLISH, type = \"bayes\",\n             test.value = 60, xlab = \"English scores\")\n\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(data = exam, x = GENDER, y = MATHS,\n               type = \"np\", messages = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nggbetweenstats(data = exam, x = RACE, y = ENGLISH,\n               type = \"p\", mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nggscatterstats(data = exam, x = MATHS, y = ENGLISH,\n               marginal = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins =\n           cut(MATHS, breaks = c(0,60,75,85,100)))\n\n\nggbarstats(exam1, x = MATHS_bins, y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#installing-and-loading-packages",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "ggstatsplot is an extension of ggplot2 package for creating graphics with details from statistical tests included in the information-rich plots themselves.\n\npacman::p_load(ggstatsplot, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#importing-data",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "exam &lt;- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#one-sample-test-gghistostats-method",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "set.seed(1234)\n\ngghistostats(data = exam, x = ENGLISH, type = \"bayes\",\n             test.value = 60, xlab = \"English scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "ggbetweenstats(data = exam, x = GENDER, y = MATHS,\n               type = \"np\", messages = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "ggbetweenstats(data = exam, x = RACE, y = ENGLISH,\n               type = \"p\", mean.ci = TRUE,\n               pairwise.comparisons = TRUE,\n               pairwise.display = \"s\",\n               p.adjust.method = \"fdr\",\n               messages = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "ggscatterstats(data = exam, x = MATHS, y = ENGLISH,\n               marginal = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_2.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on_Ex04_2",
    "section": "",
    "text": "exam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins =\n           cut(MATHS, breaks = c(0,60,75,85,100)))\n\n\nggbarstats(exam1, x = MATHS_bins, y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#the-basic-plot",
    "title": "Hands-on_Ex04_4",
    "section": "3.1 The basic plot",
    "text": "3.1 The basic plot\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Positive,\n  denominator = Death,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#makeover-1",
    "title": "Hands-on_Ex04_4",
    "section": "3.2 Makeover 1",
    "text": "3.2 Makeover 1\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#makeover-2",
    "title": "Hands-on_Ex04_4",
    "section": "3.3 Makeover 2",
    "text": "3.3 Makeover 2\n\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#computing-the-basic-derived-fields",
    "title": "Hands-on_Ex04_4",
    "section": "4.1 Computing the basic derived fields",
    "text": "4.1 Computing the basic derived fields\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on_Ex04_4",
    "section": "4.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "4.2 Calculate lower and upper limits for 95% and 99.9% CI\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#plotting-a-static-funnel-plot",
    "title": "Hands-on_Ex04_4",
    "section": "4.3 Plotting a static funnel plot",
    "text": "4.3 Plotting a static funnel plot\n\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_4.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on_Ex04_4",
    "section": "4.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "4.4 Interactive Funnel Plot: plotly + ggplot2\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-and-loading-the-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-and-loading-the-packages",
    "title": "Hand-on_Ex04_3",
    "section": "1.1 Installing and loading the packages",
    "text": "1.1 Installing and loading the packages\n\ncrosstalk: to implement cross-widget interactions (currently, linked brushing and filtering)\nggdist: to visualize distribution and uncertainty\n\n\npacman::p_load(plotly, crosstalk, DT, ggdist, ggridges, colorspace, \n               gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#data-import",
    "title": "Hand-on_Ex04_3",
    "section": "1.2 Data Import",
    "text": "1.2 Data Import\n\nexam &lt;- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#dataframe-my_sum",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#dataframe-my_sum",
    "title": "Hand-on_Ex04_3",
    "section": "2.1 Dataframe my_sum",
    "text": "2.1 Dataframe my_sum\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(n=n(), mean=mean(MATHS), sd=sd(MATHS)) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hand-on_Ex04_3",
    "section": "2.2 Plotting standard error bars of point estimates",
    "text": "2.2 Plotting standard error bars of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(aes(x=RACE, ymin=mean-se, ymax=mean+se),\n                width=0.2, colour=\"black\", alpha=0.9, linewidth=0.5) +\n  geom_point(aes(x=RACE, y=mean), stat=\"identity\", \n             color=\"red\", size = 1.5, alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hand-on_Ex04_3",
    "section": "2.3 Plotting confidence interval of point estimates",
    "text": "2.3 Plotting confidence interval of point estimates\n\nggplot(my_sum) +\n  geom_errorbar(aes(x=reorder(RACE, -mean), ymin=mean-1.96*se, ymax=mean+1.96*se),\n                width=0.2, colour=\"black\", alpha=0.9, linewidth=0.5) +\n  geom_point(aes(x=RACE, y=mean), stat=\"identity\", color=\"red\", \n             size = 1.5, alpha=1) +\n  labs(x = \"Maths score\", title = \"95% confidence interval of mean maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hand-on_Ex04_3",
    "section": "2.4 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "2.4 Visualizing the uncertainty of point estimates with interactive error bars\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1),\n                     plot.title = element_text(size = 7)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#stat_pointinterval",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#stat_pointinterval",
    "title": "Hand-on_Ex04_3",
    "section": "3.1 stat_pointinterval()",
    "text": "3.1 stat_pointinterval()\nstat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = c(0.95,0.99),\n  .point = mean,\n  .interval = qi,\n  show.legend = FALSE) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#stat_gradientinterval",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#stat_gradientinterval",
    "title": "Hand-on_Ex04_3",
    "section": "3.2 stat_gradientinterval()",
    "text": "3.2 stat_gradientinterval()\nstat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#installing-ungeviz-package",
    "title": "Hand-on_Ex04_3",
    "section": "4.1 Installing ungeviz package",
    "text": "4.1 Installing ungeviz package\n\ndevtools::install_github(\"wilkelab/ungeviz\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#launch-the-application-in-r",
    "title": "Hand-on_Ex04_3",
    "section": "4.2 Launch the application in R",
    "text": "4.2 Launch the application in R\n\nlibrary(ungeviz)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_3.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hand-on_Ex04_3",
    "section": "4.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "4.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\n\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "ggridges, a ggplot2 extension specially designed for plotting ridgeline plots\nggdist, a ggplot2 extension specially desgin for visualising distribution and uncertainty\ncolorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n\n\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"Exam_data.csv\")\n\n\n\n\n\n\n\nggridges package provides two main geom to plot gridgeline plots:\n\ngeom_ridgeline(): takes height values directly to draw the ridgelines.\ngeom_density_ridges(): estimates data densities first and then draws those using ridgelines.\n\n\nggplot(exam, aes(x = ENGLISH, y = CLASS)) +\n  geom_density_ridges(scale = 3, rel_min_height = 0.01,\n                      bandwidth = 3.4,\n                      fill = lighten(\"#7097BB\", .3),\n                      color = \"white\") +\n  scale_x_continuous(name = \"English grades\",expand = c(0, 0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\ngeom_ridgeline_gradient() or geom_density_ridges_gradient() can be used to vary fill color along the x axis. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS, fill = stat(x))) +\n  geom_density_ridges_gradient(scale = 3,\n                               rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +\n  scale_x_continuous(name = \"English grades\",\n                     expand = c(0, 0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = ENGLISH, y = CLASS,\n                 fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\", \n                       direction = -1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS,\n                 fill = factor(stat(quantile)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE, quantiles = 4,\n                      quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\nwe can also specify quantiles by cut points such as 10% and 90% tails to colour the ridgeline plot as shown in the figure below.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS, \n                 fill = factor(stat(quantile)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE, \n                      quantiles = c(0.100, 0.900)) +\n  scale_fill_manual(name = \"Probability\", values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"), labels = c(\"(0, 0.100]\", \"(0.100, 0.900]\", \"(0.900, 1]\")) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA) +\n  stat_dots(side = \"left\", justification = 1.2, \n            binwidth = .5, dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\ncoord_flip() of ggplot2 package can be used to flip the raincloud chart horizontally. Besides, themes in the ggthemes package can be used to give the raincloud chart a professional publishing standard look.\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA) +\n  stat_dots(side = \"left\", justification = 1.2, \n            binwidth = .5, dotsize = 1.5) +\n  coord_flip() + theme_wsj()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#getting-started",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "ggridges, a ggplot2 extension specially designed for plotting ridgeline plots\nggdist, a ggplot2 extension specially desgin for visualising distribution and uncertainty\ncolorspace, an R package provides a broad toolbox for selecting individual colors or color palettes, manipulating these colors, and employing them in various kinds of visualisations.\n\n\npacman::p_load(ggdist, ggridges, ggthemes, colorspace, tidyverse)\n\n\n\n\n\nexam &lt;- read_csv(\"Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualizing-distribution-with-ridgeline-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualizing-distribution-with-ridgeline-plot",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "ggridges package provides two main geom to plot gridgeline plots:\n\ngeom_ridgeline(): takes height values directly to draw the ridgelines.\ngeom_density_ridges(): estimates data densities first and then draws those using ridgelines.\n\n\nggplot(exam, aes(x = ENGLISH, y = CLASS)) +\n  geom_density_ridges(scale = 3, rel_min_height = 0.01,\n                      bandwidth = 3.4,\n                      fill = lighten(\"#7097BB\", .3),\n                      color = \"white\") +\n  scale_x_continuous(name = \"English grades\",expand = c(0, 0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\ngeom_ridgeline_gradient() or geom_density_ridges_gradient() can be used to vary fill color along the x axis. However, they do not allow for alpha transparency in the fill. For technical reasons, we can have changing fill colors or transparency but not both.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS, fill = stat(x))) +\n  geom_density_ridges_gradient(scale = 3,\n                               rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\", option = \"C\") +\n  scale_x_continuous(name = \"English grades\",\n                     expand = c(0, 0)) +\n  scale_y_discrete(name = NULL, \n                   expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#mapping-the-probabilities-directly-onto-colour-stat_density_ridges",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#mapping-the-probabilities-directly-onto-colour-stat_density_ridges",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "ggplot(exam, aes(x = ENGLISH, y = CLASS,\n                 fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\", \n                       direction = -1) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "By using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS,\n                 fill = factor(stat(quantile)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE, quantiles = 4,\n                      quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\nwe can also specify quantiles by cut points such as 10% and 90% tails to colour the ridgeline plot as shown in the figure below.\n\nggplot(exam, aes(x = ENGLISH, y = CLASS, \n                 fill = factor(stat(quantile)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\",\n                      calc_ecdf = TRUE, \n                      quantiles = c(0.100, 0.900)) +\n  scale_fill_manual(name = \"Probability\", values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"), labels = c(\"(0, 0.100]\", \"(0.100, 0.900]\", \"(0.900, 1]\")) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-distribution-with-raincloud-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04/Hands-on_Ex04_1.html#visualising-distribution-with-raincloud-plot",
    "title": "Hands-on_Ex04_1",
    "section": "",
    "text": "ggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA)\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA) +\n  stat_dots(side = \"left\", justification = 1.2, \n            binwidth = .5, dotsize = 2)\n\n\n\n\n\n\n\n\n\n\n\ncoord_flip() of ggplot2 package can be used to flip the raincloud chart horizontally. Besides, themes in the ggthemes package can be used to give the raincloud chart a professional publishing standard look.\n\nggplot(exam, aes(x = RACE, y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5, justification = -0.2,\n               .width = 0, point_colour = NA) +\n  geom_boxplot(width = .20, outlier.shape = NA) +\n  stat_dots(side = \"left\", justification = 1.2, \n            binwidth = .5, dotsize = 1.5) +\n  coord_flip() + theme_wsj()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#loading-the-r-packages",
    "title": "Hands-on_Ex03_2",
    "section": "1. Loading the R packages",
    "text": "1. Loading the R packages\n\nplotly: R library for plotting interactive statistical graphs.\ngganimate: An ggplot extension for creating animated statistical graphs.\ngifski: To convert video frames to GIF animations.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\ntidyverse: A family of modern R packages specially designed to support data science, analysis and communication task.\nreadxl: An R package used to read .xls and .xlsx into R.\n\n\npacman::p_load(plotly, gganimate, gifski, gapminder, tidyverse, readxl)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#importing-the-data",
    "title": "Hands-on_Ex03_2",
    "section": "2. Importing the data",
    "text": "2. Importing the data\n\ncol &lt;- c(\"Country\", \"Continent\")\n# to create a character vector containing the values \"Country\", \"Continent\"\n\nglobalPop &lt;- read_xls(\"GlobalPopulation.xls\", sheet=\"Data\") %&gt;%\n# %&gt;% is the pipe operator in R, it passes the result of one function into the next\n  \n  mutate(across(all_of(col), as.factor)) %&gt;%\n  # mutate(): to add or change columns in a data frame\n  # across(col, as.factor): to convert the col to factor type\n  # mutate_at() also can be used here\n  \n  mutate(Year = as.integer(Year))\n  # convert year to integer"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-a-static-poplulation-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-a-static-poplulation-bubble-plot",
    "title": "Hands-on_Ex03_2",
    "section": "1. Building a static poplulation bubble plot",
    "text": "1. Building a static poplulation bubble plot\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', x = '% Aged', y = '% Young')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-the-animated-bubble-plot",
    "title": "Hands-on_Ex03_2",
    "section": "2. Building the animated bubble plot",
    "text": "2. Building the animated bubble plot\n\ntransition_time() is used to create transition through distinct states in time (i.e. Year)\nease_aes() is used to control easing of aesthetics. The default is linear. Other methods are as the following:\n\nquadratic\ncubic\nquartic\nquintic\nsine\ncircular\nexponential\nelastic\nback\nbounce\n\nview_*(): to control the panel behavior\nshadow_*(): to keep traces of previous or future frames\nenter_*()/exit_*() : to define how elements appear and disappear\n\n\nggplot(globalPop, aes(x = Old, y = Young, size = Population, colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', x = '% Aged', y = '% Young') +\n  \n  transition_time(Year) +       \n  ease_aes('linear') + \n  view_follow(fixed_y = TRUE) + \n  # follow the data horizontally\n  shadow_mark(past = TRUE, future = FALSE, alpha = 0.2) +\n  # keep traces of previous frames\n  enter_fade() + exit_shrink()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-ggploy",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-ggploy",
    "title": "Hands-on_Ex03_2",
    "section": "1. Building an animated bubble plot: ggploy()",
    "text": "1. Building an animated bubble plot: ggploy()\n“show.legend = FALSE” doesn’t work here, so here needs to use “theme(legend.position=‘none’)”\n\ngg &lt;- ggplot(globalPop, aes(x = Old, y = Young, size = Population,\n                            colour = Country)) +\n  geom_point(aes(size = Population, frame = Year), alpha = 0.7,\n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-plot_ly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03_2.html#building-an-animated-bubble-plot-plot_ly",
    "title": "Hands-on_Ex03_2",
    "section": "2. Building an animated bubble plot: plot_ly()",
    "text": "2. Building an animated bubble plot: plot_ly()\n\nbp &lt;- globalPop %&gt;%\n  \n  plot_ly(x = ~Old, y = ~Young, size = ~Population, color = ~Continent,\n          sizes = c(2, 100), frame = ~Year, text = ~Country, hoverinfo = \"text\",\n          type = 'scatter', mode = 'markers') %&gt;%\n  \n  layout(showlegend = FALSE)\n\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the laptop. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the laptop. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_bar",
    "text": "Geometric Objects: geom_bar\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_dotplot",
    "text": "Geometric Objects: geom_dotplot\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_dotplot(binwidth = 2.5,\n               dotsize = 0.5) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_histogram",
    "text": "Geometric Objects: geom_histogram\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram()\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 color = \"white\",\n                 fill = \"light green\")\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           fill = RACE)) +\n  geom_histogram(bins = 20,\n                 color = \"grey30\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom-density",
    "text": "Geometric Objects: geom-density\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           color = RACE)) +\n  geom_density()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_boxplot",
    "text": "Geometric Objects: geom_boxplot\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_boxplot(notch = TRUE)\n\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?\nNotch went outside hinges\nℹ Do you want `notch = FALSE`?"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_violin",
    "text": "Geometric Objects: geom_violin\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_violin()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_point",
    "title": "Hands-on Exercise 1",
    "section": "Geometric Objects: geom_point",
    "text": "Geometric Objects: geom_point\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-on Exercise 1",
    "section": "Geom Objects can be combined",
    "text": "Geom Objects can be combined\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_boxplot() +\n  geom_point(position = \"jitter\",\n             size = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-value-by-using-stat_summary-and-overriding-the-default-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-value-by-using-stat_summary-and-overriding-the-default-geom",
    "title": "Hands-on Exercise 1",
    "section": "Adding mean value by using stat_summary() and overriding the default geom",
    "text": "Adding mean value by using stat_summary() and overriding the default geom\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",\n               fun = \"mean\",\n               color = \"light green\",\n               size = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-value-by-using-geom_-and-overriding-the-default-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-mean-value-by-using-geom_-and-overriding-the-default-stat",
    "title": "Hands-on Exercise 1",
    "section": "Adding mean value by using geom_() and overriding the default stat",
    "text": "Adding mean value by using geom_() and overriding the default stat\n\nggplot(data = exam_data,\n       aes(y = MATHS,\n           x = RACE)) +\n  geom_boxplot() +\n  geom_point(stat = \"summary\",\n             fun = \"mean\",\n             color = \"light pink\",\n             size = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve-geom_smooth",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#best-fit-curve-geom_smooth",
    "title": "Hands-on Exercise 1",
    "section": "Best fit curve: geom_smooth()",
    "text": "Best fit curve: geom_smooth()\n\nDefault method used is loess\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth = 0.5)\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\nThe default smoothing method can be overridden\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5)\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_wrap",
    "title": "Hands-on Exercise 1",
    "section": "facet_wrap()",
    "text": "facet_wrap()\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_wrap(~ RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#facet_grid",
    "title": "Hands-on Exercise 1",
    "section": "facet_grid()",
    "text": "facet_grid()\n\nggplot(data = exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20) +\n    facet_grid(~ RACE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip-to-change-the-bar-chart-from-vertical-form-to-horizontal-form",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_flip-to-change-the-bar-chart-from-vertical-form-to-horizontal-form",
    "title": "Hands-on Exercise 1",
    "section": "coord_flip(): to change the bar chart from vertical form to horizontal form",
    "text": "coord_flip(): to change the bar chart from vertical form to horizontal form\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian-to-fix-the-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#coord_cartesian-to-fix-the-axis-range",
    "title": "Hands-on Exercise 1",
    "section": "coord_cartesian(): to fix the axis range",
    "text": "coord_cartesian(): to fix the axis range\n\nggplot(data = exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  coord_cartesian(xlim = c (0,100),\n                  ylim = c (0,100))\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_light",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_light",
    "title": "Hands-on Exercise 1",
    "section": "theme_light()",
    "text": "theme_light()\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_light()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_classic",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_classic",
    "title": "Hands-on Exercise 1",
    "section": "theme_classic()",
    "text": "theme_classic()\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_gray",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_gray",
    "title": "Hands-on Exercise 1",
    "section": "theme_gray()",
    "text": "theme_gray()\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_minimal",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#theme_minimal",
    "title": "Hands-on Exercise 1",
    "section": "theme_minimal()",
    "text": "theme_minimal()\n\nggplot(data = exam_data,\n       aes(x = RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  }
]