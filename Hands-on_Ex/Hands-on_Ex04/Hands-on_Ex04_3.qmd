---
title: "Hand-on_Ex04_3"
author: "Huang Zihan"
date: "May 8, 2025"
date-modified: "last-modified"
format: html
editor: visual
execute: 
  eval: true
  echo: true
  warning: false
---

# 4-3 Visulizing Uncertainty

# 1. Getting Started

## 1.1 Installing and loading the packages

-   crosstalk: to implement cross-widget interactions (currently, linked brushing and filtering)

-   ggdist: to visualize distribution and uncertainty

```{r}
pacman::p_load(plotly, crosstalk, DT, ggdist, ggridges, colorspace, 
               gganimate, tidyverse)
```

## 1.2 Data Import

```{r}
exam <- read_csv("Exam_data.csv")
```

# 2. Visualizing the uncertainty of point estimates: ggplot2 methods

## 2.1 Dataframe my_sum

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(n=n(), mean=mean(MATHS), sd=sd(MATHS)) %>%
  mutate(se=sd/sqrt(n-1))

knitr::kable(head(my_sum), format = 'html')
```

## 2.2 Plotting standard error bars of point estimates

```{r}
ggplot(my_sum) +
  geom_errorbar(aes(x=RACE, ymin=mean-se, ymax=mean+se),
                width=0.2, colour="black", alpha=0.9, linewidth=0.5) +
  geom_point(aes(x=RACE, y=mean), stat="identity", 
             color="red", size = 1.5, alpha=1) +
  ggtitle("Standard error of mean maths score by rac")
```

## 2.3 Plotting confidence interval of point estimates

```{r}
ggplot(my_sum) +
  geom_errorbar(aes(x=reorder(RACE, -mean), ymin=mean-1.96*se, ymax=mean+1.96*se),
                width=0.2, colour="black", alpha=0.9, linewidth=0.5) +
  geom_point(aes(x=RACE, y=mean), stat="identity", color="red", 
             size = 1.5, alpha=1) +
  labs(x = "Maths score", title = "95% confidence interval of mean maths score by race")
```

## 2.4 Visualizing the uncertainty of point estimates with interactive error bars

```{r}
shared_df = SharedData$new(my_sum)

bscols(widths = c(4,8),
       ggplotly((ggplot(shared_df) +
                   geom_errorbar(aes(
                     x=reorder(RACE, -mean),
                     ymin=mean-2.58*se, 
                     ymax=mean+2.58*se), 
                     width=0.2, 
                     colour="black", 
                     alpha=0.9, 
                     size=0.5) +
                   geom_point(aes(
                     x=RACE, 
                     y=mean, 
                     text = paste("Race:", `RACE`, 
                                  "<br>N:", `n`,
                                  "<br>Avg. Scores:", round(mean, digits = 2),
                                  "<br>95% CI:[", 
                                  round((mean-2.58*se), digits = 2), ",",
                                  round((mean+2.58*se), digits = 2),"]")),
                     stat="identity", 
                     color="red", 
                     size = 1.5, 
                     alpha=1) + 
                   xlab("Race") + 
                   ylab("Average Scores") + 
                   theme_minimal() + 
                   theme(axis.text.x = element_text(
                     angle = 45, vjust = 0.5, hjust=1),
                     plot.title = element_text(size = 7)) +
                   ggtitle("99% Confidence interval of average /<br>maths scores by race")), 
                tooltip = "text"), 
       DT::datatable(shared_df, 
                     rownames = FALSE, 
                     class="compact", 
                     width="100%", 
                     options = list(pageLength = 10,
                                    scrollX=T), 
                     colnames = c("No. of pupils", 
                                  "Avg Scores",
                                  "Std Dev",
                                  "Std Error")) %>%
         formatRound(columns=c('mean', 'sd', 'se'),
                     digits=2))
```

# 3. Visualising Uncertainty: ggdist package

## 3.1 stat_pointinterval()

stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.

```{r}
exam %>%
  ggplot(aes(x = RACE, y = MATHS)) +
  stat_pointinterval(.width = 0.95,
  .point = median,
  .interval = qi) +
  labs(
    title = "Visualising confidence intervals of median math score",
    subtitle = "Median Point + Multiple-interval plot")
```

```{r}
exam %>%
  ggplot(aes(x = RACE, y = MATHS)) +
  stat_pointinterval(.width = c(0.95,0.99),
  .point = mean,
  .interval = qi,
  show.legend = FALSE) +
  labs(
    title = "Visualising confidence intervals of median math score",
    subtitle = "Mean Point + Multiple-interval plot")
```

```{r}
exam %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_pointinterval(
    show.legend = FALSE) +   
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Mean Point + Multiple-interval plot")
```

## 3.2 stat_gradientinterval()

stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.

```{r}
exam %>%
  ggplot(aes(x = RACE, 
             y = MATHS)) +
  stat_gradientinterval(   
    fill = "skyblue",      
    show.legend = TRUE     
  ) +                        
  labs(
    title = "Visualising confidence intervals of mean math score",
    subtitle = "Gradient + interval plot")
```

# 4. Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)

## 4.1 Installing ungeviz package

```{r}
devtools::install_github("wilkelab/ungeviz")
```

## 4.2 Launch the application in R

```{r}
library(ungeviz)
```

## 4.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)

```{r}
ggplot(data = exam, 
       (aes(x = factor(RACE), 
            y = MATHS))) +
  geom_point(position = position_jitter(
    height = 0.3, 
    width = 0.05), 
    size = 0.4, 
    color = "#0072B2", 
    alpha = 1/2) +
  geom_hpline(data = sampler(25, 
                             group = RACE), 
              height = 0.6, 
              color = "#D55E00") +
  theme_bw() + 
  transition_states(.draw, 1, 3)
```
